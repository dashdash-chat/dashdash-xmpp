import logging
import shortuuid
shortuuid.set_alphabet('1234567890abcdefghijklmnopqrstuvwxyz')
debug = '<%= node.chef_environment == 'dev' %>' == 'true'  # grr ruby

domain = '<%= node.run_state['config']['domain'] %>'
server_ip = '<%= node.run_state['config']['xmlrpc']['ip'] %>'

component_port = <%= node.run_state['config']['leaves']['port'] %>
max_leaves = <%= node.run_state['config']['leaves']['max_leaves'] %>
leaves_domain = '%s.%s' % ('<%= node.run_state['config']['leaves']['subdomain'] %>', domain)
leaves_jid_user = '<%= node.run_state['config']['leaves']['jid_user'] %>'
leaves_jid = '%s@%s' % (leaves_jid_user, leaves_domain)
leaves_secret = '<%= node.run_state['config']['leaves']['secret'] %>'
graph_jid_user = '<%= node.run_state['config']['xmlrpc']['graph_user'] %>'
graph_jid = '%s@%s' % (graph_jid_user, domain)
graph_xmpp_password = '<%= node.run_state['config']['xmlrpc']['graph_password'] %>'
helpbot_jid_user = '<%= node.run_state['config']['xmpp_users']['helpbot_user'] %>'
helpbot_xmpp_password = '<%= node.run_state['config']['xmpp_users']['helpbot_password'] %>'
act_on_user_stage = 'fiph5bap3av5on5bid2y'  # just a random string

xmlrpc_server = '<%= node.run_state['config']['xmlrpc']['domain'] %>'
xmlrpc_port = <%= node.run_state['config']['xmlrpc']['port'] %>
leaves_xmlrpc_user = '<%= node.run_state['config']['xmlrpc']['leaves_user'] %>'
leaves_xmlrpc_password = '<%= node.run_state['config']['xmlrpc']['leaves_password'] %>'
web_xmlrpc_user = '<%= node.run_state['config']['xmlrpc']['web_user'] %>'
web_xmlrpc_password = '<%= node.run_state['config']['xmlrpc']['web_password'] %>'
helpbot_xmlrpc_user = '<%= node.run_state['config']['xmlrpc']['helpbot_user'] %>'
helpbot_xmlrpc_password = '<%= node.run_state['config']['xmlrpc']['helpbot_password'] %>'

db_host = '<%= node.run_state['config']['mysql']['host'] %>'
db_name = '<%= node.run_state['config']['mysql']['main_name'] %>'
leaves_mysql_lock_name = 'leaf'
leaves_mysql_user = '<%= node.run_state['config']['mysql']['leaves_user'] %>'
leaves_mysql_password ='<%= node.run_state['config']['mysql']['leaves_password'] %>'
graph_mysql_user = '<%= node.run_state['config']['mysql']['graph_user'] %>'
graph_mysql_password = '<%= node.run_state['config']['mysql']['graph_password'] %>'
helpbot_mysql_user = '<%= node.run_state['config']['mysql']['helpbot_user'] %>'
helpbot_mysql_password = '<%= node.run_state['config']['mysql']['helpbot_password'] %>'
celery_db_name = '<%= node.run_state['config']['mysql']['celery_name'] %>'
celery_mysql_user = '<%= node.run_state['config']['mysql']['celery_user'] %>'
celery_mysql_password = '<%= node.run_state['config']['mysql']['celery_password'] %>'

aws_sqs_prefix = '<%= node.run_state['config']['aws']['sqs_prefix'] %>'
aws_access_key_id = '<%= node.run_state['config']['aws']['access_key_id'] %>'
aws_secret_access_key = '<%= node.run_state['config']['aws']['secret_access_key'] %>'  # if it's broken, regenerate this until you get one without a "/"

vinebot_prefix = 'vinebot_'

protected_users = <%= node.run_state['config']['xmpp_users']['admins'] %> + [web_xmlrpc_user, leaves_xmlrpc_user, helpbot_xmlrpc_user, leaves_jid_user, graph_jid_user]
admin_jids = ['%s@%s' % (user, domain) for user in <%= node.run_state['config']['xmpp_users']['admins'] %>]

twitter_consumer_key = '<%= node.run_state['config']['twitter']['consumer_key'] %>'
twitter_consumer_secret = '<%= node.run_state['config']['twitter']['consumer_secret'] %>'

watched_usernames = <%= node.run_state['config']['twilio']['watched_usernames'] %>
twilio_account_sid = '<%= node.run_state['config']['twilio']['account_sid'] %>'
twilio_auth_token = '<%= node.run_state['config']['twilio']['auth_token'] %>'
twilio_from_number = '<%= node.run_state['config']['twilio']['from_number'] %>'
twilio_to_numbers = <%= node.run_state['config']['twilio']['to_numbers'] %>

client_port = <%= node.run_state['config']['xmpp_users']['port'] %>
echo_user = '<%= node.run_state['config']['xmpp_users']['echo_user'] %>'
default_user_password = '<%= node.run_state['config']['xmpp_users']['default_password'] %>'

log_format = '%(asctime)-15s %(name)s %(levelname)-7s - %(message)s'

# global variables to save the hassle of passing around the values
class g(object):
    loglevel = None
    logger = None
    db = None 
    ectl = None
    send_presences = None
    
    @classmethod
    def use_new_logger(self, name):
        formatter = logging.Formatter(log_format)
        ch = logging.StreamHandler()
        ch.setLevel(logging.DEBUG)
        ch.setFormatter(formatter)
        g.logger = logging.getLogger(name)
        g.logger.setLevel(g.loglevel)
        g.logger.propagate = False  # otherwise the main logging.info (or whatever) gets called too. ugh this was annoying to figure out.
        g.logger.addHandler(ch)
